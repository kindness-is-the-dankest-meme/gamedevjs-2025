/**
 * ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙
 * ∙ ▗ ▄ ▄ ▄ ▄ ▖ ▗ ▖ ∙ ∙ ∙
 * ∙ ▐ █ █ █ █ ▌ ▐ ▌ ∙ ∙ ∙
 * ∙ ▐ █ █ █ █ ▙ ╱ ╲ ▄ ▖ ∙
 * ∙ ▐ █ █ █ █ █ ▙ ▟ █ ▌ ∙
 * ∙ ▝ ▀ ▜ █ ▛ ▀ ▀ ▀ ▜ ▌ ∙
 * ∙ ▗ ▄ ▞ ▀ ▚ ▄ ▖ ∙ ▐ ▌ ∙
 * ∙ ▐ █ ▌ ▗ ▟ █ ▌ ▗ ▟ ▌ ∙
 * ∙ ▝ ▀ ▚ ▟ █ █ ▌ ▐ █ ▌ ∙
 * ∙ ▗ ▄ ▟ █ █ ▛ ╲ ╱ ▀ ▘ ∙
 * ∙ ▝ ▀ ▀ ▀ ▀ ▘ ▝ ▘ ∙ ∙ ∙
 * ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙ ∙
 */
export const nbors = {
  "▗": {
    n: "∙▀▘▝",
    e: "▞╱▄▖▟",
    s: "▞╱▐▟▝",
    w: "∙▌▘▖",
  },
  "▖": {
    n: "∙▀▘▝",
    e: "∙▐▗▝",
    s: "▚╲▌▘▙",
    w: "▚╲▄▗▙",
  },
  "▘": {
    n: "▞╱▌▖▛",
    e: "∙▐▗▝",
    s: "∙▄▗▖",
    w: "▞╱▛▝▀",
  },
  "▝": {
    n: "▚╲▐▜▗",
    e: "▚╲▀▜▘",
    s: "∙▄▗▖",
    w: "∙▌▘▖",
  },
  "▛": {
    n: "█▄▟▙",
    e: "▚╲▀▜▘",
    s: "▚╲▌▘▙",
    w: "█▐▟▜",
  },
  "▜": {
    n: "█▄▟▙",
    e: "█▌▛▝",
    s: "▞╱▐▟▝",
    w: "▞╱▛▝▀",
  },
  "▟": {
    n: "▚╲▐▜▗",
    e: "█▌▛▙",
    s: "█▀▜▗",
    w: "▚╲▗▙▄",
  },
  "▙": {
    n: "▞╱▌▖▛",
    e: "▞╱▄▖▟",
    s: "█▀▖▛",
    w: "█▐▟▖",
  },
  "▌": {
    n: "▞╱▌▖▛",
    e: "∙▐▗▝",
    s: "▚╲▌▘▙",
    w: "█▐▟▜",
  },
  "▐": {
    n: "▚╲▐▜▗",
    e: "█▌▛▙",
    s: "▞╱▐▟▝",
    w: "∙▌▘▖",
  },
  "▚": {
    n: "▌▖▛",
    e: "▞╱▄▖▟",
    s: "▞╱▐▟▝",
    w: "█▐▟▜",
  },
  "▞": {
    n: "▐▜▗",
    e: "▚╲▀▜▘",
    s: "▚╲▌▘▙",
    w: "∙▌▘▖",
  },
  "╲": {
    n: "▌▖▛",
    e: "▞╱▄▖▟",
    s: "▞╱▐▟▝",
    w: "█▐▟▜",
  },
  "╱": {
    n: "▐▜▗",
    e: "▚╲▀▜▘",
    s: "▚╲▌▘▙",
    w: "∙▌▘▖",
  },
  "▀": {
    n: "█▄▘▝",
    e: "▚╲▀▜▘",
    s: "∙▄▗▖",
    w: "▞╱▀▛▝",
  },
  "▄": {
    n: "∙▀▘▝",
    e: "▞╱▄▖▟",
    s: "█▀▜▛",
    w: "▚╲▄▗▙",
  },
  "█": {
    n: "█▄▟▙",
    e: "█▌▛▙",
    s: "█▀▜▛",
    w: "█▐▟▜",
  },
  "∙": {
    n: "∙▀▘▝",
    e: "∙▐▗▝",
    s: "∙▄▖▗",
    w: "∙▌▘▖",
  },
  "": {
    n: "",
    e: "",
    s: "",
    w: "",
  },
} as const;

const { keys } = Object;
const vlts = keys(nbors);

export type Tile = keyof typeof nbors;
export const isvt = (t: string): t is Tile => vlts.includes(t);
